import pyodbc
import os
from dotenv import load_dotenv

load_dotenv()

# Get database connection details from environment variables
database_host = os.environ.get("DATABASE_HOST")
database_port = os.environ.get("DATABASE_PORT")
database_name = os.environ.get("DATABASE_NAME")
database_user = os.environ.get("DATABASE_USER")
database_password = os.environ.get("DATABASE_PASSWORD")

# Construct the connection string
connection_string = (f"DRIVER={{ODBC Driver 18 for SQL Server}};"
                     f"SERVER={database_host},{database_port};"
                     f"DATABASE={database_name};"
                     f"UID={database_user};"
                     f"PWD={database_password};"
                     f"Encrypt=yes;"
                     f"TrustServerCertificate=no;"
                     f"Connection Timeout=30;")

try:
    # Establish a connection to the database
    conn = pyodbc.connect(connection_string)
    print("Connection established successfully!")

    sql_insert = """
    INSERT INTO sql_db_ocr.dbo.Billing (NumbBill, Address, ClientName , IssueDate, Item, Total)
    VALUES (?, ?, ?, ?, ?, ?)
    """

    # Provide the invoice data dynamically
    invoice_data = ('')


    # Execute the SQL INSERT statement with the provided data
    cursor = conn.cursor()
    cursor.execute(sql_insert, invoice_data)
    conn.commit()

    print("Data inserted successfully!")

except Exception as e:
    print("Error:", e)

finally:
    # Close the connection
    if 'conn' in locals():
        conn.close()
